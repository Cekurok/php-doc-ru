<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 347481 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<!-- $Revision$ -->
<refentry xml:id="function.round" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>round</refname>
  <refpurpose>Округляет число типа float</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>float</type><methodname>round</methodname>
   <methodparam><type>float</type><parameter>val</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>precision</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>PHP_ROUND_HALF_UP</initializer></methodparam>
  </methodsynopsis>
  <para>
   Возвращает округлённое значение <parameter>val</parameter> с указанной точностью <parameter>precision</parameter>
   (количество цифр после запятой).
   <parameter>precision</parameter> может быть отрицательным или нулём (по умолчанию).
  </para>
  <!-- It's not true
  <para>
  <caution>
  <simpara>
  При среднем значении <function>round</function> округляет в меньшую сторону четные числа
  и в большую - нечетные. Если необходимо всегда округлять в какую-либо одну сторону
  на .5 (или .05 как в примере), следует указать параметр <parameter>mode</parameter>.
  Причиной различного округления четных и нечетных чисел является попытка
  избежать классической проблемы банка, согласно которой, при постоянном округлении
  в меньшую сторону банк крадет деньги клиента, а при постоянном округлении 
  в большую сторону банк со временем разорится. Данная реализация округления
  четных и нечетных чисел равнозначна статистической безубыточности.
 </simpara>
 </caution>
 </para>
  -->
  <para>
   <note>
    <simpara>
     PHP по умолчанию не может правильно обрабатывать строки типа <literal>"12,300.2"</literal>.
     Более подробно читайте в разделе <link linkend="language.types.string.conversion">Преобразование строк в числа</link>.
    </simpara>
   </note>
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>val</parameter></term>
     <listitem>
      <para>
       Значение для округления.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>precision</parameter></term>
     <listitem>
      <para>
       Количество десятичных знаков, до которых производится округление
      </para>
      <para>
       Если <parameter>precision</parameter> положительный,
       округление будет производиться справа от запятой.
      </para>
      <para>
       Если <parameter>precision</parameter> отрицателен,
       округление будет производиться слева от запятой.
       Если абсолютное значение <parameter>precision</parameter>
       больше или равно количеству цифр, результат округления будет равен <literal>0</literal>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Используйте одну из этих констант для задания способа округления.
       <informaltable>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>&Constants;</entry>
           <entry>&Description;</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>PHP_ROUND_HALF_UP</constant></entry>
           <entry>
            Округляет <parameter>val</parameter> в большую сторону от нуля  до <parameter>precision</parameter> десятичных знаков, 
            если следующий знак находится посередине. То есть округляет 1.5 в 2 и -1.5 в -2.
           </entry>
          </row>
          <row>
           <entry><constant>PHP_ROUND_HALF_DOWN</constant></entry>
           <entry>
            Округляет <parameter>val</parameter> в меньшую сторону к нулю до <parameter>precision</parameter> десятичных знаков, 
            если следующий знак находится посередине. То есть округляет 1.5 в 1 и -1.5 в -1.
           </entry>
          </row>
          <row>
           <entry><constant>PHP_ROUND_HALF_EVEN</constant></entry>
           <entry>
            Округляет <parameter>val</parameter> до <parameter>precision</parameter> десятичных знаков 
            в сторону ближайшего четного знака.
           </entry>
          </row>
          <row>
           <entry><constant>PHP_ROUND_HALF_ODD</constant></entry>
           <entry>
            Округляет <parameter>val</parameter> до <parameter>precision</parameter> десятичных знаков 
            в сторону ближайшего нечетного знака.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Значение округляется до заданного значения <parameter>precision</parameter> как &float;.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>round</function></title>
    <programlisting role="php">
<![CDATA[
<?php
var_dump round(3.4);         // 3
var_dump round(3.5);         // 4
var_dump round(3.6);         // 4
var_dump round(3.6, 0);      // 4
var_dump round(1.95583, 2);  // 1.96
var_dump round(1241757, -3); // 1242000
var_dump round(5.045, 2);    // 5.05
var_dump round(5.055, 2);    // 5.06
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
float(3)
float(4)
float(4)
float(4)
float(1.96)
float(1242000)
float(5.05)
float(5.06)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Как параметр <parameter>precision</parameter> влияет на числа с плавющей запятой</title>
    <programlisting role="php">
<![CDATA[
<?php
$number = 1346.21;

var_dump(round($number, 2));
var_dump(round($number, 1));
var_dump(round($number, 0));
var_dump(round($number, -1));
var_dump(round($number, -2));
var_dump(round($number, -3));
var_dump(round($number, -4));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
float(1346.21)
float(1346.2)
float(1346)
float(1350)
float(1300)
float(1000)
float(0)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Примеры использования параметра <parameter>mode</parameter></title>
    <programlisting role="php">
<![CDATA[
<?php
echo 'Rounding modes with 9.5' . PHP_EOL;
var_dump(round(9.5, 0, PHP_ROUND_HALF_UP));
var_dump(round(9.5, 0, PHP_ROUND_HALF_DOWN));
var_dump(round(9.5, 0, PHP_ROUND_HALF_EVEN));
var_dump(round(9.5, 0, PHP_ROUND_HALF_ODD));

echo 'Rounding modes with 8.5' . PHP_EOL;
var_dump(round(8.5, 0, PHP_ROUND_HALF_UP));
var_dump(round(8.5, 0, PHP_ROUND_HALF_DOWN));
var_dump(round(8.5, 0, PHP_ROUND_HALF_EVEN));
var_dump(round(8.5, 0, PHP_ROUND_HALF_ODD));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Rounding modes with 9.5
float(10)
float(9)
float(10)
float(9)
Rounding modes with 8.5
float(9)
float(8)
float(8)
float(9)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Примеры использования параметра <parameter>mode</parameter> с указанием точности <parameter>precision</parameter></title>
    <programlisting role="php">
<![CDATA[
<?php
echo 'Использование PHP_ROUND_HALF_UP с точностью до 1 знака' . PHP_EOL;
var_dump(round( 1.55, 1, PHP_ROUND_HALF_UP));
var_dump(round( 1.54, 1, PHP_ROUND_HALF_UP));
var_dump(round(-1.55, 1, PHP_ROUND_HALF_UP));
var_dump(round(-1.54, 1, PHP_ROUND_HALF_UP));

echo PHP_EOL;
echo 'Использование PHP_ROUND_HALF_DOWN с точностью до 1 знака' . PHP_EOL;
var_dump(round( 1.55, 1, PHP_ROUND_HALF_DOWN));
var_dump(round( 1.54, 1, PHP_ROUND_HALF_DOWN));
var_dump(round(-1.55, 1, PHP_ROUND_HALF_DOWN));
var_dump(round(-1.54, 1, PHP_ROUND_HALF_DOWN));

echo PHP_EOL;
echo 'Использование PHP_ROUND_HALF_EVEN с точностью до 1 знака' . PHP_EOL;
var_dump(round( 1.55, 1, PHP_ROUND_HALF_EVEN));
var_dump(round( 1.54, 1, PHP_ROUND_HALF_EVEN));
var_dump(round(-1.55, 1, PHP_ROUND_HALF_EVEN));
var_dump(round(-1.54, 1, PHP_ROUND_HALF_EVEN));

echo PHP_EOL;
echo 'Использование PHP_ROUND_HALF_ODD с точностью до 1 знака' . PHP_EOL;
var_dump(round( 1.55, 1, PHP_ROUND_HALF_ODD));
var_dump(round( 1.54, 1, PHP_ROUND_HALF_ODD));
var_dump(round(-1.55, 1, PHP_ROUND_HALF_ODD));
var_dump(round(-1.54, 1, PHP_ROUND_HALF_ODD));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Использование PHP_ROUND_HALF_UP с точностью до 1 знака
float(1.6)
float(1.5)
float(-1.6)
float(-1.5)

Использование PHP_ROUND_HALF_DOWN с точностью до 1 знака
float(1.5)
float(1.5)
float(-1.5)
float(-1.5)

Использование PHP_ROUND_HALF_EVEN с точностью до 1 знака
float(1.6)
float(1.5)
float(-1.6)
float(-1.5)

Использование PHP_ROUND_HALF_ODD с точностью до 1 знака
float(1.5)
float(1.5)
float(-1.5)
float(-1.5)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Был добавлен параметр <parameter>mode</parameter>.
       </entry>
      </row>
      <row>
       <entry>5.2.7</entry>
       <entry>
        Работа функции <function>round</function> была изменена
        в соответствии со стандартом C99.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ceil</function></member>
    <member><function>floor</function></member>
    <member><function>number_format</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
