<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 292734 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xmlns:phpdoc="http://php.net/ns/phpdoc" xml:id="class.swfaction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>Класс SWFAction</title>
 <titleabbrev>SWFAction</titleabbrev>
 
 <partintro>
  
  <!-- {{{ SWFAction intro -->
  <section xml:id="swfaction.intro">
   &reftitle.intro;
   <para>
    SWFAction.
   </para>
  </section>
  <!-- }}} -->
  
  <section xml:id="swfaction.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>SWFAction</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>SWFAction</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.swfaction')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
    
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
  <section>
   &reftitle.description;
   <para>
    Синтаксис сценария основан на языке Си, но с большим упущением - машина байт-кода SWF 
    слишком проста, чтобы делать много вещей, которые могут нам понравиться.
    Например, мы не можем реализовать вызовы функций без огромного 
    количества хакерских атак, потому что байт-код перехода имеет жестко закодированное 
    значение смещения. Не отправляйте ваш вызывающий адрес в стек и не возвращайте его - 
    каждая функция должна точно знать, куда возвращаться.
   </para>
   <para>
    Так что осталось? Компилятор распознает следующие токены:
    <itemizedlist>
     <listitem>
      <simpara>
       break
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       for
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       continue
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       if
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       else
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       do
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       while
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Там нет типизированных данных; все значения в компьютере действия SWF хранятся в виде строк.
    Следующие функции могут использоваться в выражениях:
    <variablelist>
     <varlistentry>
      <term>time()</term>
      <listitem>
       <simpara>
        Возвращает количество миллисекунд (?), Прошедших с начала фильма.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>random(seed)</term>
      <listitem>
       <simpara>
        Возвращает псевдослучайное число в диапазоне 0-seed.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>length(expr)</term>
      <listitem>
       <simpara>
        Возвращает длину данного выражения.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>int(number)</term>
      <listitem>
       <simpara>
        Возвращает указанное число, округленное до ближайшего целого числа.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>concat(expr, expr)</term>
      <listitem>
       <simpara>
        Возвращает конкатенацию заданных выражений.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>ord(expr)</term>
      <listitem>
       <simpara>
        Возвращает код ASCII для данного символа
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>chr(num)</term>
      <listitem>
       <simpara>
        Возвращает символ для данного кода ASCII
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>substr(string, location, length)</term>
      <listitem>
       <simpara>
        Возвращает подстроку длины <parameter>length</parameter> в расположении <parameter>location</parameter> 
        заданной строки <parameter>string</parameter>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Кроме того, могут использоваться следующие команды:
    <variablelist>
     <varlistentry>
      <term>duplicateClip(clip, name, depth)</term>
      <listitem>
       <simpara>
        Дублируйте указанный фильм <parameter>clip</parameter> (он же спрайт). Новый фильм с названием <parameter>name</parameter> 
        находится на глубине <parameter>depth</parameter>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>removeClip(expr)</term>
      <listitem>
       <simpara>
        Удаляет указанный фрагмент ролика.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>trace(expr)</term>
      <listitem>
       <simpara>
        Запишите данное выражение в журнал трассировки. Сомнительно, что плагин 
        браузера делает что-нибудь с этим.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>startDrag(target, lock, [left, top, right, bottom])</term>
      <listitem>
       <simpara>
        Начните перетаскивать фрагмент ролика <parameter>target</parameter>. Аргумент <parameter>lock</parameter> указывает, 
        блокировать ли мышь (?) - использовать 0 (&false;) или 1 (&true;). Необязательные параметры 
        определяют ограничивающую область для перетаскивания.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>stopDrag()</term>
      <listitem>
       <simpara>
        Хватит тянуть мое сердце. И этот ролик тоже.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>callFrame(expr)</term>
      <listitem>
       <simpara>
        Вызвать ууказанный фрейм как функцию.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>getURL(url, target, [method])</term>
      <listitem>
       <simpara>
        Загрузите указанный URL в названную цель. Аргумент <parameter>target</parameter> 
        соответствует целям документа HTML (например, "_top" или "_blank").
        Необязательный аргумент <parameter>method</parameter> может быть POST или GET, если вы хотите отправить 
        переменные обратно на сервер.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>loadMovie(url, target)</term>
      <listitem>
       <simpara>
        Загрузите указанный URL в названную цель. Аргументом <parameter>target</parameter> может 
        быть имя кадра (я думаю) или одно из магических значений "_level0" (заменяет 
        текущий фильм) или "_level1" (загружает новый фильм поверх текущего фильма).
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>nextFrame()</term>
      <listitem>
       <simpara>
        Перейти к следующему кадру.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>prevFrame()</term>
      <listitem>
       <simpara>
        Перейти к последнему (или, скорее, предыдущему) кадру.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>play()</term>
      <listitem>
       <simpara>
        Начать проигрывать фильм.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>stop()</term>
      <listitem>
       <simpara>
        Перестать проигрывать фильм.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>toggleQuality()</term>
      <listitem>
       <simpara>
        Переключение между высоким и низким качеством.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>stopSounds()</term>
      <listitem>
       <simpara>
        Прекратите играть все звуки.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>gotoFrame(num)</term>
      <listitem>
       <simpara>
        Перейти к номеру кадра <parameter>num</parameter>. Номера кадров начинаются с 0.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>gotoFrame(name)</term>
      <listitem>
       <simpara>
        Перейти к указанному фрейму <parameter>name</parameter>. Что очень хорошо, 
        так как я еще не добавил метки кадров.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>setTarget(expr)</term>
      <listitem>
       <simpara>
        Устанавливает контекст для действия. Или так они говорят - я действительно понятия 
        не имею, что это делает.
       </simpara>
      </listitem>   
     </varlistentry>
    </variablelist>
    И есть одна странная дополнительная вещь. Выражение frameLoaded (num) может использоваться 
    в операторах if и while, чтобы проверить, загружен ли еще 
    данный номер кадра. Ну, так или иначе, но я никогда не проверял это, и я 
    серьезно сомневаюсь, что это действительно работает. Вы можете просто использовать /:framesLoaded вместо этого.
   </para>
   <para>
    Видеоклипы (все вместе теперь спрайты) имеют свойства. Вы можете 
    прочитать их все (или можете?), вы можете установить некоторые из них, и вот они:
    they are: 
   <itemizedlist>
    <listitem>
     <simpara>
      x
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      y 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      xScale 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      yScale 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      currentFrame - (только для чтения) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      totalFrames - (только для чтения) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      alpha - уровень прозрачности
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      visible - 1=on, 0=off (?) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      width - (только для чтения) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      height - (только для чтения) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      rotation 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      target - (только для чтения) (???) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      framesLoaded - (только для чтения) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      name 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      dropTarget - (только для чтения) (???) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      url - (только для чтения) (???) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      highQuality - 1=high, 0=low (?) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      focusRect - (???) 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      soundBufTime - (???) 
     </simpara>
    </listitem>
   </itemizedlist>
   Итак, установить позицию спрайта x так же просто, как <literal>/box.x = 100;</literal>.
   Почему же косая черта перед блоком? Вот так flash отслеживает 
   спрайты в фильме, точно так же, как файловая система Unix - 
   здесь показано, что окно находится на верхнем уровне. Если бы в указанном спрайте 
   блока был бы другой спрайт с именем biff, вы бы установили его позицию x 
   с помощью /box/biff.x = 100;. По крайней мере, я так думаю; поправьте 
   меня, если я ошибаюсь.
  </para>
  </section>
  
 </partintro>
 
 &reference.ming.entities.swfaction;
 
</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
